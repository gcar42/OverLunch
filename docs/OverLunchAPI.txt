OverLunch API
A RESTFUL API returning JSON. Time Strings are ISO-8601 compliant times.

ENDPOINTS:
E1	Venue Endpoints:
   E1.1 GET /venues
	Return: list of Venue objects
	Lists information about the venues for today and tomorrow.

E2	Account Endpoints:
   E2.1 POST /account/new
        Params: email:String, name:String, password:String
        Return: Success object
        Creates a new user in the database if the email is not already taken.

   E2.2 POST /account/confirm
	Params: email:String, code:String
	Returns: Success object
	Verifies that the user owns the given email address. Code must match the confirmation email.

   E2.3 POST /account/login
        Params: email:String, password:String
	Return: Success object
	Provides a token needed to access the homepage.

   E2.4 GET /account/profile
	Params: user:String
	Return: Profile object
	Gets the list of events a user is going to or interested in. (Unsure which info identifies the user, so just calling the parameter "user" for now.)

   E2.5 GET /account/verify
        Params: token:String
        Return: user:String
	Determines who the token is valid for.

E3	Event Endpoints:
   E3.1 POST /event/new
	Params: venue_id:String, today:boolean, start:time String, end:time String, user:String, confirmed:boolean, meeting_name:String
	Return: Success object
	Creates a new event for the user at the event for the given time span, today or tomorrow, confirmed or tentative. The token field will be the event ID. (Open to change when scenario covering this added.)

   E3.2 GET /event/friends
	Params: user:String
	Return: Event[]
	Lists the events that the user's friends are going to or interested in.

   E3.3 POST /event/join
	Params: event_id:String, user:String, confirmed:boolean, start:time String, end:time String
	Return: Success object
	Adds the user to the specified event for the given time range, confirmed or tentative.

   E3.4 POST /event/cancel
	Params: event_id:String, user:String
	Return: Success object
	Removes the user from the specified event.

   E3.5 POST /event/invite
	Params: event_id:String, email:String, message:String
	Return: Success object
	If email corresponds to a user, sends a meeting link via email and adds event_id to the user's invite list. . If not a user, sends a sign-up link and stores event_id to be added when the new user signs up.

E4	Friend/Block Endpoints:
   E4.1 POST /friend/request
	Params: user:String, friend:String
	Return: Success object
	Adds friend to the list of user's friends. User is now pending in friend's friends list unless freind requested first, in which case they are now confirmed friends.

   E4.2 POST /friend/block
	Params: user:String, block:String
	Return: Success object
	Adds block to user's blocked list. Parameter name only matters for determining who can unblock.

   E4.3 POST /friend/unblock
	Params: user:String, blocked:String
	Return: Success object
	Removes blocked from user's blocked list. This will not affect the blocked status if it was mutual before.

OBJECTS
O1	Venue Objects
   O1.1 Venue = {"id": String, "name": String, "hours": Hours}
   O1.2 Hours = {"today": Span,"tomorrow": Span}
   O1.3 Span  = {"Start": time String, "End": time String}
O2	Account Objects
   O2.1 Success = {"success": boolean, "error": String, "token": String}
   O2.2 Profile = {"display_name": String, "events": Event[]}
O3	Event Objects
   O3.1 Event = {"venue_id": String, "meeting_name": String, "today": boolean, "time": Span, "interested": Participant[], "confirmed": Participant[]}
   O3.2 Participant = {"display_name": String, "id": String}